###############
# KPI metrics #
###############

# Total flows processed per minute
- query: sum(rate(netobserv_ingest_flows_processed[1m])*60)
  metricName: nFlowsProcessedPerMinuteTotals

# Total flows errored per minute
- query: sum(rate(netobserv_ingest_errors[1m])*60)
  metricName: nFlowsErroredPerMinuteTotals

# Flows processed by ingester per minute aggregated by FLP pods
- query: sum(rate(netobserv_ingest_flows_processed[1m])*60) by (pod)
  metricName: nFlowsProcessedPerMinute

# Flows errored by ingester per minute aggregated by FLP pods
- query: sum(rate(netobserv_ingest_errors[1m])*60) by (pod)
  metricName: nFlowsErroredPerMinute

#####################
# NetObserv metrics #
#####################

# netobserv pods CPU usage
- query: pod:container_cpu_usage:sum{namespace=~"netobserv|netobserv-privileged|openshift-netobserv-operator"}
  metricName: cpuUsage

# netobserv pods memory usage (RSS)
- query: sum(container_memory_rss{namespace=~"netobserv|openshift-netobserv-operator", container=""}) by (container, pod, namespace, node)
  metricName: memoryUsageRSS

# netobserv pods memory usage (Working Set)
- query: sum(container_memory_working_set_bytes{namespace=~"netobserv|openshift-netobserv-operator", container=""}) by (container, pod, namespace, node)
  metricName: memoryUsageWorkingSet

################
# eBPF metrics #
################

# total CPU usage by eBPF
- query: sum(pod:container_cpu_usage:sum{namespace="netobserv-privileged", pod=~"netobserv-ebpf.*"})
  metricName: cpuEBPFTotals

# total RSS by all eBPF pods
- query: sum(container_memory_rss{namespace="netobserv-privileged", container=""})
  metricName: rssEBPFTotals

# total working set memory by all eBPF pods
- query: sum(container_memory_working_set_bytes{namespace="netobserv-privileged", container=""})
  metricName: workingsetEBPFTotals

# eBPF pods memory usage (RSS)
- query: sum(container_memory_rss{namespace="netobserv-privileged", container=""}) by (container, pod, namespace, node)
  metricName: ebpfMemoryUsageRSS

# eBPF pods memory usage (Working Set)
- query: sum(container_memory_working_set_bytes{namespace="netobserv-privileged", container=""}) by (container, pod, namespace, node)
  metricName: ebpfMemoryUsageWorkingSet

###############
# FLP metrics #
###############

# total CPU usage by FLP
- query: sum(pod:container_cpu_usage:sum{namespace="netobserv", pod=~"flowlogs.*"})
  metricName: cpuFLPTotals

# total RSS by all FLP pods
- query: sum(container_memory_rss{namespace="netobserv", container="", pod=~"flowlogs.*"})
  metricName: rssFLPTotals

# total working set memory by all FLP pods
- query: sum(container_memory_working_set_bytes{namespace="netobserv", container="", pod=~"flowlogs.*"})
  metricName: workingsetFLPTotals

################
# Loki metrics #
################

# total CPU usage by all loki pods
- query: sum(pod:container_cpu_usage:sum{namespace="netobserv", pod=~"loki.*"})
  metricName: cpuLokiTotals

# total RSS by all loki pods
- query: sum(container_memory_rss{namespace="netobserv", pod=~"loki.*", container=""})
  metricName: rssLokiTotals

# total working set memory by all loki pods
- query: sum(container_memory_working_set_bytes{namespace="netobserv", pod=~"loki.*", container=""})
  metricName: workingsetLokiTotals

# lokistack PVC usage averaging over 5 mins period
- query: sum by (persistentvolumeclaim) (avg_over_time(kubelet_volume_stats_used_bytes{namespace="netobserv", persistentvolumeclaim=~".*loki.*"}[5m]))
  metricName: lokiStorageUsage

# loki records written per minute
- query: sum(netobserv_loki_sent_entries_total)
  metricName: lokiRecordsWritten

# total records dropped while sending to Loki (inverse of netobserv_loki_sent_entries_total)
- query: sum(netobserv_loki_dropped_entries_total)
  metricName: lokiRecordsDropped

#################
# Kafka metrics #
#################

# Kafka PVC usage averaging over 5 mins period
- query: sum by (persistentvolumeclaim) (avg_over_time(kubelet_volume_stats_used_bytes{namespace="netobserv"}[5m]))
  metricName: kafkaStorageUsage

# total CPU usage by all kafka pods
- query: sum(pod:container_cpu_usage:sum{namespace="netobserv", pod=~"kafka.*"})
  metricName: cpuKafkaTotals

# total RSS by all kafka pods
- query: sum(container_memory_rss{namespace="netobserv", container="", pod=~"kafka.*"})
  metricName: rssKafkaTotals

# total working set memory by all Kafka pods
- query: sum(container_memory_working_set_bytes{namespace="netobserv", container="", pod=~"kafka.*"})
  metricName: workingsetKafkaTotals
