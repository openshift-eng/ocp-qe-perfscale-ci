apiVersion: machine.openshift.io/v1beta1
kind: MachineSet
metadata:
  generation: 1
  labels:
    ${MACHINESET_METADATA_LABEL_PREFIX}/cluster-api-cluster: ${CLUSTER_NAME}
  name: ${CLUSTER_NAME}-workload-machines-${CLUSTER_NAME}
  namespace: openshift-machine-api
spec:
  replicas: 1
  selector:
    matchLabels:
      ${MACHINESET_METADATA_LABEL_PREFIX}/cluster-api-cluster: ${CLUSTER_NAME}
      ${MACHINESET_METADATA_LABEL_PREFIX}/cluster-api-machine-role: workload
      ${MACHINESET_METADATA_LABEL_PREFIX}/cluster-api-machine-type: workload
      ${MACHINESET_METADATA_LABEL_PREFIX}/cluster-api-machineset: workload-machines-${CLUSTER_NAME}
  template:
    metadata:
      creationTimestamp: null
      labels:
        ${MACHINESET_METADATA_LABEL_PREFIX}/cluster-api-cluster: ${CLUSTER_NAME}
        ${MACHINESET_METADATA_LABEL_PREFIX}/cluster-api-machine-role: workload
        ${MACHINESET_METADATA_LABEL_PREFIX}/cluster-api-machine-type: workload
        ${MACHINESET_METADATA_LABEL_PREFIX}/cluster-api-machineset: workload-machines-${CLUSTER_NAME}
    spec:
      metadata:
        creationTimestamp: null
        labels:
          node-role.kubernetes.io/workload: ""
      providerSpec:
        value:
          apiVersion: vsphereprovider.openshift.io/v1beta1
          credentialsSecret:
            name: vsphere-cloud-credentials
          diskGiB: ${OPENSHIFT_WORKLOAD_NODE_VOLUME_SIZE}
          kind: VSphereMachineProviderSpec
          memoryMiB: ${OPENSHIFT_WORKLOAD_NODE_MEMORY_SIZE}
          metadata:
            creationTimestamp: null
          network:
            devices:
            - networkName: ${OPENSHIFT_WORKLOAD_NODE_NETWORK_NAME}
          numCPUs: ${OPENSHIFT_WORKLOAD_NODE_CPU_COUNT}
          numCoresPerSocket: ${OPENSHIFT_WORKLOAD_NODE_CPU_CORE_PER_SOCKET_COUNT}
          snapshot: ""
          userDataSecret:
            name: worker-user-data
          template: ${TEMPLATE_NAME}
          workspace:
            datacenter: ${DATACENTER}
            datastore: ${DATASTORE}
            folder: ${FOLDER}
            resourcePool: ${RESOURCE_POOL}
            server: ${VSPHERE_SERVER}
